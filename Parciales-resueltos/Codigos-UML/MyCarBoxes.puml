@startuml diagrama

class MyCarBoxes{
    +MyCarBoxes():MyCarBoxes
    +darDeAltaUnEmpleado(empleado:Empleado)
    +darDeAltaUnRepuesto(repuesto:Repuesto):Repuesto
    +registrarUnaOrden(orden:Orden):Orden
    -tienePatenteMasDe12Meses(orden:Orden):boolean
    -facturar(ordenAfacturar:Orden):Factura
    +facturarOrdenes(ordenes:Orden[*]):Factura[*]
}
MyCarBoxes-->"0..*"Empleado:-empleados
MyCarBoxes-->"0..*"Repuesto:-repuestos
MyCarBoxes-->"0..*"Orden:-ordenes
class Empleado {
    -nombre:String
    -valorPoHora:real
    +Empleado(nombre:string,valorPorHora:real)
    +getValorPorHora():real
}
class Repuesto{
    -fechaDeFabricacion:date
    -costo:real
    -nombre:string
    +Repuesto(costo:real,nombre:Stiring,fechaDeFabricacion:date)
    +getCosto():real
    +antiguedad(anios:integer):boolean
} 
abstract class Orden{
    -patente:string
    -fecha:date
    +Orden(patente:date,fecha:date,repuesto:Repuesto[*])
    +getPatente():real
    +calcularCosto():real
    +{abstract}misCostos():real
    +{abstract}incrementoDeGanancia():real
    +costoRepuestos():real
    +facturar()
}
Orden -->"0..*" Repuesto:-repuestos
class Factura{
    -patente:String
    -montoFinal:real
    -descuento:real
    -fecha:date
    +Factura(patente:string,descuento:real,montoFinal:real)

}
class OrdenDeCompra{
    +OrdenDeCompra(patente:String,repuestos:Repuesto[*])
    -cumpleAntiguedad(antiguedad:integer):boolean
    +misCostos():real
    +incrementoDeGanancia():real
}
OrdenDeCompra --|> Orden
class OrdenDeReparacion{
    -descripcion:string
    -horasNecesarias:integer
    +OrdenDeReparacion(patente:string,repuestos:Repuesto[*],descripcion:string,empleados:Empleado[*],horasNecesarias:integer)
    +misCostos():real
    +incrementoDeGanancia():real
}
OrdenDeReparacion -->"0..*" Empleado:-empleados
OrdenDeReparacion --|> Orden
@enduml